# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory: ~
        fos_userbundle:
            id: fos_user.user_provider.username_email #Logging by Username or Email

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: ~
            # activate different ways to authenticate

            # http_basic: ~
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html
            pattern: ^/
            form_login:
                provider: fos_userbundle
                #csrf_provider: security.csrf.token_manager #this is disable CSRF token in autentications
                # if you are using Symfony < 2.8, use the following config instead:
                # csrf_provider: form.csrf_provider
                #Adiciono al firewall que tenga en cuenta la clase que cree
                success_handler: restaurant.security.authentication_handler
                failure_handler: restaurant.security.authentication_handler
                username_parameter: login
                password_parameter: password
                require_previous_session: false #http://stackoverflow.com/questions/26694212/symfony-2-your-session-has-timed-out-or-you-have-disabled-cookies
            logout:
                success_handler: restaurant.security.logout_handler #http://www.reecefowell.com/2011/10/26/redirecting-on-loginlogout-in-symfony2-using-loginhandlers/
            anonymous:    true

    encoders:
        FOS\UserBundle\Model\UserInterface: { id: encode_password} #Esto fue un servicio que cree para que me codificara la contrase;a

    role_hierarchy:
        ROLE_RESTAURANT: ROLE_USER
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN


    access_control:
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/restaurant/dashboard, role: ROLE_ADMIN }
        - { path: ^/dashboard, role: ROLE_ADMIN }
        - { path: ^/restaurant, role: ROLE_RESTAURANT }
        - { path: ^/user, role: ROLE_USER }
